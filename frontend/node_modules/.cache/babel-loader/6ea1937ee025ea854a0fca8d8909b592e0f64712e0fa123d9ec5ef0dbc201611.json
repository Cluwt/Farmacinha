{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\csarc\\\\Documents\\\\Projetos\\\\Farmacinha\\\\frontend\\\\src\\\\Pages\\\\BularioPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Typography, Box, CircularProgress } from '@mui/material';\nimport { GoogleGenerativeAI } from '@google/generative-ai'; // Importando a biblioteca do Gemini\n\n// Função para formatar as informações do medicamento\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatMedicamentoInfo = info => {\n  return info.replace(/(\\d+\\.)/g, '<strong>$&</strong>') // Deixa os números das listas em negrito\n  .replace(/([A-Za-z ]+)(?=:)/g, '<strong>$1</strong>') // Deixa os títulos (ex: \"Classe Terapêutica\") em negrito\n  .replace(/\\*\\*/g, ''); // Remove os \"**\"\n};\nconst BularioPage = () => {\n  _s();\n  const [medicamento, setMedicamento] = useState('Dipirona'); // Medicamento padrão\n  const [loading, setLoading] = useState(false); // Estado de carregamento\n  const [error, setError] = useState(null); // Estado de erro\n  const [medicamentoInfo, setMedicamentoInfo] = useState(''); // Informações do medicamento\n\n  // Função de busca do medicamento e integração com o Gemini\n  const handleSearch = async () => {\n    if (!medicamento.trim()) {\n      setError('Por favor, digite o nome de um medicamento.');\n      return;\n    }\n    setError(null);\n    setLoading(true); // Ativa o carregamento\n\n    try {\n      const genAI = new GoogleGenerativeAI('AIzaSyANWW0Tlbheq1AV37hWDIYJLjJv4GaGt_Y'); // Substitua com sua chave API do Gemini\n      const model = genAI.getGenerativeModel({\n        model: 'gemini-1.5-flash'\n      });\n\n      // Prompt que você passará para o modelo de IA\n      const prompt = `Conte-me em 20 linhas tudo separadinho em tópicos sobre o medicamento: ${medicamento}.`;\n\n      // Fazendo a chamada à API do Gemini para obter informações sobre o medicamento\n      const result = await model.generateContent(prompt);\n      const formattedInfo = formatMedicamentoInfo(result.response.text()); // Formata as informações\n      setMedicamentoInfo(formattedInfo); // Armazenando as informações no estado\n    } catch (error) {\n      setError('Erro ao buscar informações do medicamento.');\n      console.error('Erro ao buscar medicamento:', error);\n    } finally {\n      setLoading(false); // Desativa o carregamento\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      fontFamily: 'Arial, sans-serif',\n      backgroundColor: '#f9f9f9',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        margin: '20px 0',\n        width: '100%',\n        maxWidth: '600px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Buscar bula\",\n        variant: \"outlined\",\n        fullWidth: true,\n        value: medicamento,\n        onChange: e => setMedicamento(e.target.value),\n        sx: {\n          marginRight: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSearch,\n        variant: \"contained\",\n        color: \"primary\",\n        sx: {\n          width: '150px'\n        },\n        disabled: loading,\n        children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 24,\n          sx: {\n            color: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 22\n        }, this) : 'Pesquisar'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      sx: {\n        color: 'red',\n        marginBottom: '10px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%',\n        maxWidth: '800px',\n        fontSize: '16px',\n        lineHeight: '1.8',\n        marginTop: '20px',\n        color: '#333'\n      },\n      children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 60,\n        sx: {\n          display: 'block',\n          margin: '0 auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: medicamentoInfo || 'Nenhuma informação disponível.'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(BularioPage, \"iSL4SyBHTL5zF5RX2wmmc0Ha/5w=\");\n_c = BularioPage;\nexport default BularioPage;\nvar _c;\n$RefreshReg$(_c, \"BularioPage\");","map":{"version":3,"names":["React","useState","TextField","Button","Typography","Box","CircularProgress","GoogleGenerativeAI","jsxDEV","_jsxDEV","formatMedicamentoInfo","info","replace","BularioPage","_s","medicamento","setMedicamento","loading","setLoading","error","setError","medicamentoInfo","setMedicamentoInfo","handleSearch","trim","genAI","model","getGenerativeModel","prompt","result","generateContent","formattedInfo","response","text","console","sx","fontFamily","backgroundColor","padding","children","style","display","alignItems","margin","width","maxWidth","label","variant","fullWidth","value","onChange","e","target","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","onClick","color","disabled","size","marginBottom","fontSize","lineHeight","marginTop","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/Users/csarc/Documents/Projetos/Farmacinha/frontend/src/Pages/BularioPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Button, Typography, Box, CircularProgress } from '@mui/material';\r\nimport { GoogleGenerativeAI } from '@google/generative-ai'; // Importando a biblioteca do Gemini\r\n\r\n// Função para formatar as informações do medicamento\r\nconst formatMedicamentoInfo = (info) => {\r\n  return info\r\n    .replace(/(\\d+\\.)/g, '<strong>$&</strong>') // Deixa os números das listas em negrito\r\n    .replace(/([A-Za-z ]+)(?=:)/g, '<strong>$1</strong>')  // Deixa os títulos (ex: \"Classe Terapêutica\") em negrito\r\n    .replace(/\\*\\*/g, '');  // Remove os \"**\"\r\n};\r\n\r\nconst BularioPage = () => {\r\n  const [medicamento, setMedicamento] = useState('Dipirona'); // Medicamento padrão\r\n  const [loading, setLoading] = useState(false); // Estado de carregamento\r\n  const [error, setError] = useState(null); // Estado de erro\r\n  const [medicamentoInfo, setMedicamentoInfo] = useState(''); // Informações do medicamento\r\n\r\n  // Função de busca do medicamento e integração com o Gemini\r\n  const handleSearch = async () => {\r\n    if (!medicamento.trim()) {\r\n      setError('Por favor, digite o nome de um medicamento.');\r\n      return;\r\n    }\r\n\r\n    setError(null);\r\n    setLoading(true); // Ativa o carregamento\r\n\r\n    try {\r\n      const genAI = new GoogleGenerativeAI('AIzaSyANWW0Tlbheq1AV37hWDIYJLjJv4GaGt_Y'); // Substitua com sua chave API do Gemini\r\n      const model = genAI.getGenerativeModel({ model: 'gemini-1.5-flash' });\r\n\r\n      // Prompt que você passará para o modelo de IA\r\n      const prompt = `Conte-me em 20 linhas tudo separadinho em tópicos sobre o medicamento: ${medicamento}.`;\r\n\r\n      // Fazendo a chamada à API do Gemini para obter informações sobre o medicamento\r\n      const result = await model.generateContent(prompt);\r\n      const formattedInfo = formatMedicamentoInfo(result.response.text()); // Formata as informações\r\n      setMedicamentoInfo(formattedInfo); // Armazenando as informações no estado\r\n    } catch (error) {\r\n      setError('Erro ao buscar informações do medicamento.');\r\n      console.error('Erro ao buscar medicamento:', error);\r\n    } finally {\r\n      setLoading(false); // Desativa o carregamento\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ fontFamily: 'Arial, sans-serif', backgroundColor: '#f9f9f9', padding: '20px' }}>\r\n      {/* Barra de Pesquisa */}\r\n      <div style={{ display: 'flex', alignItems: 'center', margin: '20px 0', width: '100%', maxWidth: '600px' }}>\r\n        <TextField\r\n          label=\"Buscar bula\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          value={medicamento}\r\n          onChange={(e) => setMedicamento(e.target.value)}\r\n          sx={{ marginRight: '10px' }}\r\n        />\r\n        <Button\r\n          onClick={handleSearch}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          sx={{ width: '150px' }}\r\n          disabled={loading}\r\n        >\r\n          {loading ? <CircularProgress size={24} sx={{ color: 'white' }} /> : 'Pesquisar'}\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Exibe erro */}\r\n      {error && <Typography variant=\"body1\" sx={{ color: 'red', marginBottom: '10px' }}>{error}</Typography>}\r\n\r\n      {/* Exibe informações do medicamento */}\r\n      <Box sx={{ width: '100%', maxWidth: '800px', fontSize: '16px', lineHeight: '1.8', marginTop: '20px', color: '#333' }}>\r\n        {loading ? (\r\n          <CircularProgress size={60} sx={{ display: 'block', margin: '0 auto' }} />\r\n        ) : (\r\n          <div dangerouslySetInnerHTML={{ __html: medicamentoInfo || 'Nenhuma informação disponível.' }} />\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BularioPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}